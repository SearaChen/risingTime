function [RMS,rt,ror] = rise(signal,fs,varargin)
% [RMS,rt,ror] = rise(signal,fs);
% [RMS,rt,ror] = rise(signal,fs,plot);
%
% calculate rms, log-rms, rise time and rate-of-rise
% assumes CVC onset begins at beginning of file

% ask for audio file if not given
if nargin<1
    prompt = {'Enter audio file to analyze:'};
    name = 'Select .wav file';
    numlines = 1;
    defaultanswer = {'bas'};
    answer = inputdlg(prompt,name,numlines,defaultanswer);
    [signal,fs]  = wavread([answer{1},'.wav']);
end

if size(signal,1)>size(signal,2); signal = signal'; end

% prepad signal
onset(1) = 2000; % shift onset by +2000 samples
% pad = zeros(1,onset);
pad = rand(1,onset(1));pad = pad*min(pad);
signal = [pad signal];

% time vector for full signal
sx = (1:length(signal))/fs;

% AVERAGE RMS ENERGY (running rms)
wl = 20;
wl = round(wl*fs/1000);
RMS = sqrt(abs(filtfilt(2*hamming(wl)/wl,1,signal.^2)));

% VOWEL ONSET (FROM RMS MAX)
[vmx,imx] = max(RMS); % max rms should correspond to vowel max
offset = find(RMS(1:imx)< (vmx*.2),1,'last'); % first "leftward" value <10% of vowel max

% CONSONANTAL RMS ONSET
[crmx,crimx] = max(RMS(1:offset));
onset(2) = find(RMS(1:crimx)< (crmx*.1),1,'last');

% DURATION
dur = length(RMS(onset(2):offset))/fs; % duration in seconds
cx = linspace(0,dur,offset-onset(2)+1);% time vector for C1

% RISE TIME
% the time from onset of noise to maximum amplitude in the frication window
% the time interval between the frication onset and the instant of maxima
% in the average RMS energy
[cmx,imx] = max(RMS(onset(2):offset));
rt = imx/fs; % rise time in seconds

% RISE TIME SLOPE
x(1) = onset(2)/fs;
x(2) = (onset(2) + imx)/fs;
y(1) = RMS(onset(2));
y(2) = cmx;
slope = (y(2) - y(1)) / (x(2) - x(1));

% pre-emphasize
% [signal, mu] = preemp(signal,0.8);

% LOG RMS
wl = 20;
wl = round(wl*fs/1000);
logrms = 10*log10(sqrt(abs(filtfilt(2*hamming(wl)/wl,1,signal.^2))));
% remove last point
logrms(end) = logrms(end-1);
% detrend
logrms = logrms + abs(min(logrms));

% onset relative to log-rms
[lrmx,lrimx] = max(logrms(1:offset));
onset(3) = find(logrms(1:imx)< (lrmx*.15),1,'last');

% RATE OF RISE
% the derivative of the log rms energy with respect to time
% calculated at intervals of 1ms using a standard Hamming window of 24ms
ror = diff(logrms,1); % first-order difference equation

% COMPUTE FORMANTS F1-F4
% [fmts,bw] = snackfmts(signal,fs);

% FORMANT RISE TIME
% time to vowel formant steady state

% PLOT RESULTS
if nargin>2
figure('Color','w');%,'Position',[837   486   547   860])

subplot(4,1,1)
plot(sx,signal,'Color',[.6 .6 .6])
axis tight; hold on
plot(sx,RMS,'r')
legend('signal','rms')
vline(offset/fs,'k','Offset')
vline(onset(2)/fs,'k','Onset')
ylabel('Amplitude (arbitrary)')
title('Waveform & RMS (raw)','FontSize',14)

subplot(4,1,2)
plot(cx,RMS(onset(2):offset))
xlim([0 max(cx)])
hold on; grid on
plot(imx/fs,cmx,'or') % reaction time
vline(imx/fs,'r',num2str(imx/fs))
legend('average rms','maximum rms')
ylabel('RMS Amplitude (abitrary)')
title(['Initial Consonant Rise Time (slope = ',num2str(slope),')'],'FontSize',14)

subplot(4,1,3)
plot(sx,logrms)
vline(offset/fs,'k','Offset')
vline(onset(3)/fs,'k','Onset')
xlim([sx(1) sx(end)])
ylabel('RMS Amplitude (dB)')
title('log RMS energy','FontSize',14)

subplot(4,1,4)
% plot(sx,signal,'Color',[.6 .6 .6])
% hold on
plot(sx(2:end),ror);grid on
vline(offset/fs,'k','Offset')
vline(onset(3)/fs,'k','Onset')
ylabel('ROR (dB/ms)')
title('Rate of Rise','FontSize',14)

xlabel('Time (sec)','FontSize',14)
end

% figure
% plot(fmts)


